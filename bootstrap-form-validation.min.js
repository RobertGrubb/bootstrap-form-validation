const BootstrapValidation={validateEmail:e=>e.match(/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/),process(e){if("undefined"===window.$)return console.error("JQuery is not loaded."),!1;if(!$(e).length)return console.error(`${e} does not exist.`),!1;let a=(e=$(e)).data("validate-validation");if(!a)return console.error(`${e} has no validation rules set.`),!1;a=a.split("|");let t=[],i=!0;for(let r=0;r<a.length;r++)if("trim"===a[r])e.val(e.val().trim());else if("required"===a[r])e.val()||(t.push(`${e.attr("name")?e.attr("name"):"This field"} is required`),i=!1);else if("email"===a[r])BootstrapValidation.validateEmail(e.val())||(t.push(`${e.attr("name")?e.attr("name"):"This field"} must be a valid email address.`),i=!1);else if("number"===a[r])!0===isNaN(e.val())&&(t.push(`${e.attr("name")?e.attr("name"):"This field"} must be a number.`),i=!1);else if(a[r].includes("min_length")){let l=a[r].split(":");if(2!==l.length){console.log("Min length and max length should only have to parameters (ex min:12)");continue}e.val().length<parseInt(l[1])&&(t.push(`${e.attr("name")?e.attr("name"):"This field"} must be atleast ${l[1]} characters.`),i=!1)}else if(a[r].includes("max_length")){let n=a[r].split(":");if(2!==n.length){console.log("Min length and max length should only have to parameters (ex min:12)");continue}e.val().length>parseInt(n[1])&&(t.push(`${e.attr("name")?e.attr("name"):"This field"} must be equal to or less than ${n[1]} characters.`),i=!1)}return{errors:t,valid:i}},processForm:e=>{let a=[],t=!0,i=$(e).find("*[data-validate-validation]").toArray();for(let r=0;r<i.length;r++){let l=BootstrapValidation.process(i[r]);if(a.concat(l.errors),t=l.valid,l.valid)$(i[r]).removeClass("is-invalid"),$(i[r]).parent().find(".invalid-feedback").remove();else{let n=$(i[r]).parent().find(".invalid-feedback");n.length?$(i[r]).parent().find(".invalid-feedback").html(l.errors.join("<br />")):$(i[r]).parent().append(`<div class="invalid-feedback text-left">${l.errors.join("<br />")}</div>`),$(i[r]).addClass("is-invalid")}}!0===t&&$(this).find('button[type="submit"]').prop("disabled",!1),$(this).find('button[type="submit"]').prop("disabled",!0)}};window.BootstrapValidation=BootstrapValidation,$(function(){if("undefined"===window.$)return console.error("Bootstrap is not loaded."),!1;window.$('[data-validate-on-submit="true"], [data-validate-on-blur="true"]').on("submit",function(e){console.log("test"),e.preventDefault();let a=[],t=!0,i=$(this).find("*[data-validate-validation]").toArray();for(let r=0;r<i.length;r++){let l=BootstrapValidation.process(i[r]);if(a.concat(l.errors),!1===l.valid&&(t=!1),l.valid)$(i[r]).removeClass("is-invalid"),$(i[r]).parent().find(".invalid-feedback").remove();else{let n=$(i[r]).parent().find(".invalid-feedback");n.length?$(i[r]).parent().find(".invalid-feedback").html(l.errors.join("<br />")):$(i[r]).parent().append(`<div class="invalid-feedback text-left">${l.errors.join("<br />")}</div>`),$(i[r]).addClass("is-invalid")}}return!0===t&&(e.target.submit(),!0)}),window.$('[data-validate-on-blur="true"] input, [data-validate-on-blur="true"] textarea, [data-validate-on-blur="true"] select').on("blur",function(e){let a=!0,t=BootstrapValidation.process(this);if([].concat(t.errors),a=t.valid,t.valid)$(this).removeClass("is-invalid"),$(this).parent().find(".invalid-feedback").remove();else{let i=$(this).parent().find(".invalid-feedback");i.length?$(this).parent().find(".invalid-feedback").html(t.errors.join("<br />")):$(this).parent().append(`<div class="invalid-feedback text-left">${t.errors.join("<br />")}</div>`),$(this).addClass("is-invalid")}BootstrapValidation.processForm($(this).closest("form"))})});